@import '../../../css/shared';

$menuFontCol: $fontCol;
$menuMinorFontCol: $grey60;
$menuBorderCol: $borderCol;
$menuBg: $grey0;
$menuBgSelected: $grey30;
$menuBasePadding: $basePadding;

$menuSpacerCol: $menuBorderCol;

$menuFontSize: 1.4rem;
$menuIconSize: $menuFontSize;

.menu {
  
}


.list {
  width: 24rem;
  background: $menuBg;
  border: 1px solid $menuBorderCol;
  border-bottom-width: 0.1rem;
  color: $menuFontCol;
  font-size: $menuFontSize;
  //margin-left: -0.3rem;
  list-style: none;
  padding: 0;
  margin: 0;

  box-shadow: 0.2rem 0.2rem rgba(0, 0, 0, 0.2);

}

.item {

}

.item.selectable.selected,
.item.hasChildren.selected
 {
  background: $menuBgSelected;
}

.spacer {
  border-bottom: 0.1rem solid rgba($menuSpacerCol, 0.70);
  margin: $menuBasePadding/4 0;
}

.action {
  //resetting button styles
  width: 100%;
  border: none;
  background: transparent;

  display: flex;
  padding: $menuBasePadding/2;
  cursor: default;
  position: relative;
  outline: none;

  &.selectable {
    cursor: pointer;
  }

  &.disabled {
    color: rgba($menuFontCol, 0.5);
  }

  //has children triangle stuff
  $triangleWidth: 0.6rem;
  $triangleHeight: 0.8rem;
  $triangleHPadding: 0.4rem;

  padding-right: $triangleWidth + ($triangleHPadding * 2);

  &.hasChildren {
    &:after {
      @include triangle(right, $triangleWidth, $triangleHeight, currentColor);

      position: absolute;
      right: $triangleHPadding;
      top: 50%;
      margin-top: - $triangleHeight / 2;
    }
  }
}

.icon {
  font-size: $menuIconSize;
  flex: ($menuIconSize+($menuBasePadding/2)) 0 0;
  padding-right: $menuBasePadding/2;
}

.label {
  composes: alignStart from "../../../css/generic.scss";
  flex: auto 1 1;
  padding-right: $menuBasePadding/2;
}

.info {
  composes: alignEnd from "../../../css/generic.scss";
  color: $menuMinorFontCol;
  flex: auto 1 1;
}
