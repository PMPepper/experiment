@import '../../../css/shared';


//Overall table vars
$tableCol: $fontCol;
$tableBorderCol: $borderColor;
$tableBasePadding: $basePadding;

//thead vars
$theadCol: null;
$theadBg: $grey30;

//tbody vars
$tbodyCol: null;
$tbodyBg: $grey0;
$tbodyBgAlt: $grey20;

//tfoot vars
$tfootCol: null;
$tfootBg: $grey40;

//Arrow vars
$arrowCol: $grey50;
$arrowWidth: 1.4rem;
$arrowHeight: 1rem;

//stack header vars
$stackHeaderCol: null;
$stackHeaderBg: null;

//stack content vars
$stackContentCol: null;
$stackContentBg: null;

.dataTable {
  composes: responsive from "../../../css/generic.scss";

  color: $tableCol;
}

.table {
  width: 100%;
  border: 0.1rem solid $tableBorderCol;
  border-top: none;
  margin-top: $tableBasePadding / 2;
  border-spacing: 0;
  border-collapse: separate;
}

//Header styles
.thead {
  font-weight: bold;
  color: $theadCol;
  background: $theadBg;
}

.th {
  font-size: 1.65rem;
  vertical-align: middle;
  padding: 0;
  border-left: 0.1rem solid $tableBorderCol;
  border-top: 0.1rem solid $tableBorderCol;
  //border-bottom: 0.1rem solid $tableBorderCol;
  text-align: center;
  white-space: nowrap;

  &:first-child {
    border-left: 0;
  }
}

.thEven {
  composes: th;
}


//-non-sorting column header styles
.columnLabel {
  display: block;
  padding: $tableBasePadding/2 $arrowWidth + ($tableBasePadding*0.75);
  white-space: inherit;
  text-align: inherit;
  font-weight: bold;
}

//-Sort button styles
.columnSortBtn {
  composes: columnLabel;

  background: transparent;
  padding: $tableBasePadding/2;
  border: 0;
  margin: 0;
  width: 100%;
  cursor: pointer;
  color: inherit;

  @include textInteraction();
}

.columnSortBtnAsc {
  composes: columnSortBtn;
}

.columnSortBtnDesc {
  composes: columnSortBtn;
}

//-Sorting arrow styles
.columnSortBtnInner {
  display: inline-block;
  padding: 0 $arrowWidth + $tableBasePadding/4;
  position: relative;

  &::after {
    position: absolute;
    right: 0;
    top: 50%;
    margin-top: -$arrowHeight/2;
  }
}

.columnSortBtnInner:global(.alignStart) {
  padding-left: 0;
}

.columnSortBtnInnerAsc {
  composes: columnSortBtnInner;

  &::after {
    @include triangle(top, $arrowWidth, $arrowHeight, $arrowCol);
  }
}

.columnSortBtnInnerDesc {
  composes: columnSortBtnInner;

  &::after {
    @include triangle(bottom, $arrowWidth, $arrowHeight, $arrowCol);
  }
}



//tbody styles
.tbody {
  color: $tbodyCol;
}

//-Row styles
.tr {
  background: $tbodyBg;
}

.trEven {
  composes: tr;
  background: $tbodyBgAlt;
}

.selectable {
  @include blockInteraction();
}

//-Cell styles
.td {
  font-size: 1.55rem;
  line-height: 1.0;
  border-left: 0.1rem solid $tableBorderCol;
  border-top: 0.1rem solid $tableBorderCol;
  vertical-align: top;
  padding: $tableBasePadding / 2;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  &:first-child {
    border-left: 0;
  }
}

.tdEven {
  composes: td;
}

//tfoot styles
.tfootTD {
  background: $tfootBg;
  color: $tfootCol;
}


////////////////////
// Stacked styles //
////////////////////

.stacked,
.tableStacked,
.tbodyStacked,
.trStacked,
.tfootStacked,
.tfootRowStacked,
.tfootTDStacked {
  display: block;
}

//Put table header offscreen
.theadStacked {
  composes: offscreen from "../../../css/generic.scss";

  display: block;
}

.tdStacked {
  display: flex;
  flex: auto 1 1;
  border-left: 0;
  text-align: left;
  padding: 0;
}


.tdHeader {
  display: none;
  flex: 50% 0 0;
  max-width: 35rem;
  font-weight: bold;
  border-right: 0.1rem solid $tableBorderCol;
  color: $stackHeaderCol;
  background: $stackHeaderBg;
}

//-Non-sorting stacked header style
.rowLabel {
  padding: $tableBasePadding/2;
  display: block;
  font-weight: bold;
  text-align: left;
}

//-Sorting button styles
.rowSortBtn {
  composes: rowLabel;

  cursor: pointer;
  margin: 0;
  border: 0;
  background: transparent;
  color: inherit;
  width: 100%;

  @include textInteraction();
}

.rowSortBtnAsc {
  composes: rowSortBtn;
}

.rowSortBtnDesc {
  composes: rowSortBtn;
}

//-For showing the arrows on stacked tables
.rowSortBtnInner {
  display: inline-block;
  padding-right: $arrowWidth+$tableBasePadding/4;
  position: relative;

  &::after {
    position: absolute;
    right: 0;
    top: 50%;
    margin-top: -$arrowHeight/2;
  }
}

.rowSortBtnInnerAsc {
  composes: rowSortBtnInner;

  &::after {
    @include triangle(top, $arrowWidth, $arrowHeight, $arrowCol);
  }
}

.rowSortBtnInnerDesc {
  composes: rowSortBtnInner;

  &::after {
    @include triangle(bottom, $arrowWidth, $arrowHeight, $arrowCol);
  }
}

//show cell headers if stacked
.tdStacked > .tdHeader {
  display: block;
}

//stacked table cell content styles
.tdStacked > .tdContent {
  flex: 50% 1 1;
  padding: $tableBasePadding/2;

  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: $stackContentCol;
  background: $stackContentBg;
}


//Expandable rows styles
// .expandTr {
//
// }
//
// .expandTrEven {
//   composes: expandTr;
// }

.expandTd {
  padding: 0;
}

.expandTdEven {
  composes: expandTd;
}

.expandTd.isVisible,
.expandTdEven.isVisible {
  /*&:after {
    display: block;
    content: '';
    border-bottom: 0.1rem solid $borderColor;
  }*/

  border-top: 0.1rem solid $borderColor;
}

// .expandState-0,
// .expandState-1,
// .expandState-2,
// .expandState-4 {
//   border-top: 0.1rem solid $borderColor;;
// }

.expandContent {
  will-change: opacity, height;
  overflow-y: hidden;
}

.expandContent:before, .expandContent:after{
    content: ' ';
    display: table;
}

.expandContentEven {
  composes: expandContent;
}

//expand stacked styles
.expandTdStacked,
.expandTrStacked {
  display: block;
}
